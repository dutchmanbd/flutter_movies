// Mocks generated by Mockito 5.4.3 from annotations
// in movies_usf/test/home_vm_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:movies_usf/data/api_service.dart' as _i2;
import 'package:movies_usf/data/movies_repository.dart' as _i3;
import 'package:movies_usf/domain/lce.dart' as _i5;
import 'package:movies_usf/domain/movie.dart' as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeApiService_0 extends _i1.SmartFake implements _i2.ApiService {
  _FakeApiService_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [MoviesRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockMoviesRepository extends _i1.Mock implements _i3.MoviesRepository {
  MockMoviesRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.ApiService get api => (super.noSuchMethod(
        Invocation.getter(#api),
        returnValue: _FakeApiService_0(
          this,
          Invocation.getter(#api),
        ),
      ) as _i2.ApiService);

  @override
  _i4.Stream<_i5.Lce<List<_i6.Movie>>> getMoviesFromServer(String? query) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMoviesFromServer,
          [query],
        ),
        returnValue: _i4.Stream<_i5.Lce<List<_i6.Movie>>>.empty(),
      ) as _i4.Stream<_i5.Lce<List<_i6.Movie>>>);
}
